/* Given a sorted array A of size N and a target value B, return the index (0-based indexing) if the target is found.
If not, return the index where it would be if it were inserted in order.

NOTE: You may assume no duplicates in the array. Users are expected to solve this in O(log(N)) time. */

public class Solution {
    public int searchInsert(int[] A, int B) {
        return getPosition(A, B);
    }

    private int getPosition(int[] A, int B){

        int high = A.length-1;
        int low = 0;

        while(low <= high){
            int mid = (low + high)/2;

            if(A[mid] == B)
                return mid;

            else if(A[mid] < B){
                low = mid+1;
            }else{
                high = mid - 1;
            }
        }
        return low;
    }
}
