/* Given two arrays of integers A and B of size N each, where each pair (A[i], B[i]) for 0 <= i < N represents a unique point (x, y) in 2D Cartesian plane.

Find and return the number of unordered triplets (i, j, k) such that (A[i], B[i]), (A[j], B[j]) and (A[k], B[k]) form a right-angled triangle with the triangle having one side parallel to the x-axis and one side parallel to the y-axis.

NOTE: The answer may be large so return the answer modulo (109 + 7).
*/

public class Solution {
    public int solve(int[] A, int[] B) {
        return countRightTriangle(A, B);
    }

    private int countRightTriangle(int[] A, int[] B){

    Map<Integer, Integer> mpX = new HashMap<>();
    Map<Integer, Integer> mpY = new HashMap<>();

    int n = A.length;
    for(int i = 0; i < n; i++){
      if(mpX.containsKey(A[i])){
        int val = mpX.get(A[i]);
        mpX.put(A[i], val+1);
      }else{
        mpX.put(A[i], 1);
      }

      if(mpY.containsKey(B[i])){
        int val = mpY.get(B[i]);
        mpY.put(B[i], val+1);
      }else{
        mpY.put(B[i], 1);
      }
    }

    long count = 0;
    int MOD = 1000000007;
    for(int i = 0; i < n; i++){
      if(mpX.containsKey(A[i]) && mpY.containsKey(B[i])){
        count = (count + (mpX.get(A[i])-1)*(mpY.get(B[i])-1)%MOD)%MOD;
      }
    }
    return (int)count;
  }
}
