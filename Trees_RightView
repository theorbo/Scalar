/* Given a binary tree of integers denoted by root A. Return an array of integers representing the right view of the Binary tree.

Right view of a Binary Tree is a set of nodes visible when the tree is visited from Right side. */

/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<Integer> solve(TreeNode A) {
        ArrayList<Integer> result = new ArrayList<>();
    if (A == null) {
      return result;
    }

    Queue<TreeNode> queue = new LinkedList<>();
    queue.add(A);

    while (!queue.isEmpty()) {

      int size = queue.size();
      for (int i = 1; i <= size; i++) {
        TreeNode node = queue.poll();
        if (node.left != null) {
          queue.add(node.left);
        }
        if (node.right != null) {
          queue.add(node.right);
        }
        if (i == size) {
          result.add(node.val);
        }
      }
    }
    return result;
    }
}
