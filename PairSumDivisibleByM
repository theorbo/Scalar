/* Given an array of integers A and an integer B, find and return the number of pairs in A whose sum is divisible by B.

Since the answer may be large, return the answer modulo (109 + 7).*/

public class Solution {
    public int solve(int[] A, int B) {

      int MOD = 1000000007;
      int n,i,j;
      n = A.length;

      Map<Integer, Long> mp = new HashMap<>();

      for(i = 0; i < n; i++){
        int key = A[i]%B;
        if(key < 0)
            key += B;
        if(mp.containsKey(key)){
          mp.put(key, mp.get(key)+1);
        } else{
          mp.put(key, 1l);
        }
      }

      long ans = 0l;
      if(mp.containsKey(0)){
        long val = mp.get(0);
        ans = ((val%MOD*(val-1)/2)%MOD)%MOD;  
      }
      i = 1;
      j = B-1;
      while(i < j){
        if(mp.containsKey(i)&& mp.containsKey(j)){
          ans = (ans + (mp.get(i)%MOD*mp.get(j))%MOD)%MOD;
        }
        i++;
        j--;
      }

      if(B%2 == 0){
        if(mp.containsKey(B/2)){
            long val = mp.get(B/2);
            ans = (ans + (val*(val-1)/2)%MOD)%MOD;
        }  
      }
      return (int)ans;
    }
}
