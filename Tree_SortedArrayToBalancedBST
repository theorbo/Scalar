/* Given an array where elements are sorted in ascending order, convert it to a height Balanced Binary Search Tree (BBST).*/

/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public TreeNode sortedArrayToBST(final int[] A) {
    return getBalancedTree(A, 0, A.length - 1);

  }

  private TreeNode getBalancedTree(int[] A, int start, int end) {
    if (start > end) {
      return null;
    }
    int mid = (start + end) / 2;
    TreeNode node = new TreeNode(A[mid]);
    node.left = getBalancedTree(A, start, mid - 1);
    node.right = getBalancedTree(A, mid + 1, end);
    return node;
  }
}
